name: Build
on:
  push:
    branches:
      - master

env:
  CDK_APP_NAME: Conduktor
  CDK_APP_DESCRIPTION: A beautiful and fully-featured desktop client for Apache Kafka
  CDK_COPYRIGHT: Â© 2019-2020 Conduktor LLC
  CDK_VENDOR: Conduktor LLC
  CDK_JLINK_MODULES: java.base,java.se,javafx.web,javafx.media,java.desktop,java.management,java.naming,java.prefs,jdk.zipfs,jdk.unsupported,jdk.unsupported.desktop,jdk.httpserver

###############################################################################

jobs:
  zip-linux:
    name: build conduktor.zip for linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: joschi/setup-jdk@v1
        with:
          java-version: openjdk14
      - name: Fetch conduktor from Gitlab
        run: |
          git clone --single-branch --branch feat-update4j --depth 1 https://osef:${{secrets.GITLAB_TOKEN}}@gitlab.com/datacumulus/conduktor/conduktor-monorepo.git
          (cd conduktor-monorepo && git log -1)
      - name: Version
        working-directory: conduktor-monorepo
        run: |
          VERSION=$(grep version gradle.properties | cut -d'=' -f2)
          SHA=$(git rev-parse --short HEAD)
          echo "::set-env name=CDK_VERSION::$VERSION"
          echo "::set-env name=SHA::$SHA"

      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradlex-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradlex-
      - name: Gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-wrapperx-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-wrapperx-

      - name: build desktop.zip
        working-directory: conduktor-monorepo
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"
        run: ./gradlew --build-cache --stacktrace build

      - name: publish artifact
        uses: actions/upload-artifact@v1
        with:
          name: conduktor-linux
          path: "./conduktor-monorepo/desktop/build/distributions/desktop-${{ env.CDK_VERSION }}.zip"

      - run: echo ${{ env.CDK_VERSION }} > version.txt
      - name: publish artifact
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: "version.txt"

  zip-windows:
    name: build conduktor.zip for windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: joschi/setup-jdk@v1
        with:
          java-version: openjdk14
      - name: Fetch conduktor from Gitlab
        run: |
          git clone --single-branch --branch feat-update4j --depth 1 https://osef:${{secrets.GITLAB_TOKEN}}@gitlab.com/datacumulus/conduktor/conduktor-monorepo.git
          cd conduktor-monorepo
          git log -1
      - name: Version
        working-directory: conduktor-monorepo
        shell: bash
        run: |
          VERSION=$(grep version gradle.properties | cut -d'=' -f2)
          SHA=$(git rev-parse --short HEAD)
          echo "::set-env name=CDK_VERSION::$VERSION"
          echo "::set-env name=SHA::$SHA"

      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~\.gradle\caches
          key: ${{ runner.os }}-gradlex-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradlex-
      - name: Gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~\.gradle\wrapper
          key: ${{ runner.os }}-wrapperx-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-wrapperx-

      - name: build desktop.zip
        shell: bash
        working-directory: conduktor-monorepo
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"
        run: ./gradlew --build-cache --stacktrace build -x test

      - name: publish artifact
        uses: actions/upload-artifact@v1
        with:
          name: conduktor-windows
          path: "./conduktor-monorepo/desktop/build/distributions/desktop-${{ env.CDK_VERSION }}.zip"

  zip-macos:
    name: build conduktor.zip for macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: joschi/setup-jdk@v1
        with:
          java-version: openjdk14
      - name: Fetch conduktor from Gitlab
        run: |
          git clone --single-branch --branch feat-update4j --depth 1 https://osef:${{secrets.GITLAB_TOKEN}}@gitlab.com/datacumulus/conduktor/conduktor-monorepo.git
          (cd conduktor-monorepo && git log -1)
      - name: Version
        working-directory: conduktor-monorepo
        run: |
          VERSION=$(grep version gradle.properties | cut -d'=' -f2)
          SHA=$(git rev-parse --short HEAD)
          echo "::set-env name=CDK_VERSION::$VERSION"
          echo "::set-env name=SHA::$SHA"

      - run: rm -rf ~/.gradle/caches/*
      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradlexx-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradlexx-
      - name: Gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-wrapperxx-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-wrapperxx-
      - name: m2 wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2

      - run: env
      - run: |
          git clone --single-branch --branch jdk10 --depth 1 https://github.com/edvin/tornadofx
          cd tornadofx && mvn install -Dmaven.test.skip=true

      - name: build desktop.zip
        working-directory: conduktor-monorepo
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"
        run: ./gradlew --build-cache --stacktrace build

      - name: publish artifact
        uses: actions/upload-artifact@v1
        with:
          name: conduktor-macos
          path: "./conduktor-monorepo/desktop/build/distributions/desktop-${{ env.CDK_VERSION }}.zip"

      - run: echo ${{ env.CDK_VERSION }} > version.txt
      - name: publish artifact
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: "version.txt"

  ###############################################################################

  macos:
    runs-on: macos-latest
    needs: zip-macos

    steps:
      - uses: actions/checkout@v2
      - uses: joschi/setup-jdk@v1
        with:
          java-version: openjdk14

      - name: Download built distribution
        uses: actions/download-artifact@v1
        with:
          name: version
      - run: echo "::set-env name=CDK_VERSION::$(cat version/version.txt)"

      - name: Download built distribution
        uses: actions/download-artifact@v1
        with:
          name: conduktor-macos
      - run: unzip conduktor-macos/desktop-${{ env.CDK_VERSION }}.zip

      - name: Build macOS packages
        run: .github/scripts/macos.sh

      - run: mkdir -p macos && mv ${{ env.CDK_APP_NAME }}-${{ env.CDK_VERSION }}.pkg ${{ env.CDK_APP_NAME }}-${{ env.CDK_VERSION }}.dmg macos
        name: Prepare upload

      - name: Upload macOS .pkg & .dmg
        uses: actions/upload-artifact@v1
        with:
          name: macos
          path: macos

  ###############################################################################

  linux:
    runs-on: ubuntu-latest
    needs: zip-linux

    steps:
      - uses: actions/checkout@v2
      - uses: joschi/setup-jdk@v1
        with:
          java-version: openjdk14

      - name: Download built distribution
        uses: actions/download-artifact@v1
        with:
          name: version
      - run: echo "::set-env name=CDK_VERSION::$(cat version/version.txt)"

      - name: Download built distribution
        uses: actions/download-artifact@v1
        with:
          name: conduktor-linux
      - run: unzip conduktor-linux/desktop-${{ env.CDK_VERSION }}.zip

      - name: Build Linux packages
        run: .github/scripts/linux.sh

      - run: mkdir -p linux && mv ${{ env.CDK_APP_NAME }}-${{ env.CDK_VERSION }}.deb ${{ env.CDK_APP_NAME }}-${{ env.CDK_VERSION }}.rpm linux
        name: Prepare upload

      - name: Upload Linux .deb & .rpm
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: linux

  ###############################################################################

  windows:
    runs-on: windows-latest
    needs: zip-windows

    steps:
      - uses: actions/checkout@v2
      - uses: joschi/setup-jdk@v1
        with:
          java-version: openjdk14

      - name: Download built distribution
        uses: actions/download-artifact@v1
        with:
          name: version
      - run: echo "::set-env name=CDK_VERSION::$(cat version/version.txt)"
        shell: bash

      - name: Download built distribution
        uses: actions/download-artifact@v1
        with:
          name: conduktor-windows
      - run: unzip conduktor-windows/desktop-${{ env.CDK_VERSION }}.zip
        shell: bash

      - name: Build windows msi with sh
        shell: bash
        run: ./.github/scripts/windows.sh

      # - name: Build windows msi
      #   run: .\.github\scripts\windows.ps1

      - run: mkdir -p windows && mv ${{ env.CDK_APP_NAME }}-${{ env.CDK_VERSION }}.msi ${{ env.CDK_APP_NAME }}-${{ env.CDK_VERSION }}.exe windows
        shell: bash
        name: Prepare upload

      - name: Upload Windows .msi and .exe
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: windows

  ###############################################################################

  release:
    name: "Prepare Github Release"
    runs-on: ubuntu-latest
    needs: [linux, windows, macos]
    steps:
      - uses: actions/checkout@v2
      - name: Fetch conduktor from Gitlab
        run: |
          git clone --branch feat-update4j https://osef:${{secrets.GITLAB_TOKEN}}@gitlab.com/datacumulus/conduktor/conduktor-monorepo.git

      - name: Download built distribution
        uses: actions/download-artifact@v1
        with:
          name: version
      - run: echo "::set-env name=CDK_VERSION::$(cat version/version.txt)"
      - run: ../.github/scripts/release.sh {{ env.CDK_VERSION }}
        id: create_release_body
        working-directory: conduktor-monorepo

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.CDK_VERSION }}
          release_name: ${{ steps.create_release_body.outputs.name }}
          draft: true
          body: ${{ steps.create_release_body.outputs.body }}

      - uses: actions/download-artifact@v1
        with:
          name: conduktor-windows
      - uses: actions/download-artifact@v1
        with:
          name: conduktor-macos
      - uses: actions/download-artifact@v1
        with:
          name: conduktor-linux
      - uses: actions/download-artifact@v1
        with:
          name: macos
      - uses: actions/download-artifact@v1
        with:
          name: linux
      - uses: actions/download-artifact@v1
        with:
          name: windows

      - name: Linux .zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./conduktor-linux/desktop-${{ env.CDK_VERSION }}.zip
          asset_name: Conduktor-Linux-${{ env.CDK_VERSION }}.zip
          asset_content_type: application/zip

      - name: Windows .zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./conduktor-windows/desktop-${{ env.CDK_VERSION }}.zip
          asset_name: Conduktor-Windows-${{ env.CDK_VERSION }}.zip
          asset_content_type: application/zip

      - name: macOS .zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./conduktor-macos/desktop-${{ env.CDK_VERSION }}.zip
          asset_name: Conduktor-macOS-${{ env.CDK_VERSION }}.zip
          asset_content_type: application/zip

      - name: macOS .dmg
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/Conduktor-${{ env.CDK_VERSION }}.dmg
          asset_name: Conduktor-${{ env.CDK_VERSION }}.dmg
          asset_content_type: application/x-apple-diskimage

      - name: macOS .pkg
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/Conduktor-${{ env.CDK_VERSION }}.pkg
          asset_name: Conduktor-${{ env.CDK_VERSION }}.pkg
          asset_content_type: application/x-newton-compatible-pkg

      - name: Windows .msi
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/Conduktor-${{ env.CDK_VERSION }}.msi
          asset_name: Conduktor-${{ env.CDK_VERSION }}.msi
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Windows .exe
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/Conduktor-${{ env.CDK_VERSION }}.exe
          asset_name: Conduktor-${{ env.CDK_VERSION }}.exe
          asset_content_type: application/x-apple-diskimage

      - name: Linux  .deb
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/Conduktor-${{ env.CDK_VERSION }}.deb
          asset_name: Conduktor-${{ env.CDK_VERSION }}.deb
          asset_content_type: vnd.debian.binary-package

      - name: Linux  .rpm
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/Conduktor-${{ env.CDK_VERSION }}.rpm
          asset_name: Conduktor-${{ env.CDK_VERSION }}.rpm
          asset_content_type: application/x-redhat-package-manager
